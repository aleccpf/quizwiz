@{
  ViewBag.Title = "QuizWiz";
}

<div class="row">
  <div class="col-xs-12">
    <p>@Html.ActionLink("Create Exam >>", "Edit", "Exams", null, new { @class = "btn btn-primary btn-large" })</p>
  </div>
</div>
<div class="row">
  <div class="col-xs-12">
    <form class="form-inline" role="form">
      <input type="search" class="form-control" placeholder="Search quiz" data-bind="value: query, valueUpdate: ['input', 'afterkeydown']">
    </form>
  </div>
</div>
<div class="row">
  <div class="col-xs-12">
    <div class="list-group" data-bind="if: searching()">
      <div class="list-group-item">
        Searching ...
      </div>
    </div>
    <div class="list-group" data-bind="ifnot: searching() || !query() || exams().length">
      <div class="list-group-item">
        No results found.
      </div>
    </div>
    <div class="list-group" data-bind="foreach: exams">
      <div class="list-group-item">
        <a href="#" data-bind="text: Name" class="list-group-item-heading"></a>
        <p class="list-group-item-text" data-bind="text: Description"></p>
        <a href="#" class="btn btn-default" data-bind="attr: { href: '/Exams/Take/' + ExamId }">Take</a>
      </div>
    </div>
  </div>
</div>
@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
  @Scripts.Render("~/bundles/ko")
  <script>
    var exams = [];

    function ExamsViewModel() {
      var self = this;
      self.query = ko.observable();
      self.exams = ko.observableArray(exams);
      self.searching = ko.observable(false);
      self.delayedQuery = ko.computed(self.query).extend({
        rateLimit: { method: "notifyWhenChangesStop", timeout: 400 }
      });
      self.delayedQuery.subscribe(function (q) {
        if (q) {
          self.searching(true);
          $.getJSON('/Exams/Search', { q: q }, self.exams)
            .always(function () {
            self.searching(false);
          });
        }
        else {
          self.searching(false);
        }
      }, this);
    }

    ko.applyBindings(new ExamsViewModel());
  </script>
}
